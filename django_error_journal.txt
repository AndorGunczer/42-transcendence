CSRF requests fail upon introducing code to production infrastructure:
    settings.py ADD: CSRF_TRUSTED_ORIGINS = ["https://127.0.0.1", "https://localhost"]

No Path /wss/communication (socket failure):
    Descripton: socket related urls are declared in routing.py, normal http related urls are at urls.py
        upon requests to socket urls, I get the 404 not found error, because only urls.py is checked.
    Root Cause Analysis:    - Socket communication uses socket.send() on the front end instead of fetch()
    Fix: Replace fetch() with socket.send() in socket related functions

Calling Sync function from an Async Context(Channels consumer) error (SynchronousOnlyOperation):
    Description: Trying to issue an ORM call from within a Consumer fires up the above mentioned error.
    Root Cause Analysis: x
    Fix:    - Wrap sync function into async one (using sync to asyc)
            or 
            - 


AttributeError: 'NoneType' object has no attribute 'group_send'
    await self.channel_layer.group_send(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Description: channel_layer is none 
    Root Cause Analysis:    In the settings, there is no defined backend for django channels to run on.
    Fix:    - Set a backend for django channels to use in settings.py ()

ASGI: apps aren't loaded yet:
    Description: imports of installed apps are made before asgi_app is initialized
    Root Cause Analysis: above
    Fix:    - Make sure imports happen after the wsgi and asgi initialized, not before
            (settings.py file there was an import of consumers that created the error)

Hardships with extracting the user during socket communication
    Methods tried:
        - database (get_user() from the Users2 model)
        - Session (Doesn't work because we use Access Tokens)
        - JWT Access tokens (working solution)
        