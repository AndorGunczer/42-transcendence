volumes:
  blockchain_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/blockchain
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/postgres

services:
  blockchain:
    container_name: blockchain
    build:
      context: ./blockchain
      dockerfile: Dockerfile
      args:
        USER_ROOT_PW: ${USER_ROOT_PW}
    expose:
      - 7545
    volumes:
      - blockchain_data:/app/data
    networks:
      static-network:
        ipv4_address: ${BLOCKCHAIN_IP}

  webapp:
    container_name: webapp
    depends_on:
      - blockchain
    build:
      context: ./webapp
      dockerfile: Dockerfile
      args:
        USER_ROOT_PW: ${USER_ROOT_PW}
        USER_POSTGRES_PW: ${USER_POSTGRES_PW}
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_POSTGRES_PW: ${DB_POSTGRES_PW}
      PGPASSWORD: ${PGPASSWORD}
    ports:
      - "443:443"
    volumes:
      - blockchain_data:/app/data
      - postgres_data:/var/lib/postgresql/16/main/
      - ${PWD}/webapp/transcendence:/app/transcendence
    networks:
      static-network:
        ipv4_address: ${WEBAPP_IP}
    stdin_open: true   # Equivalent to -i in docker run
    tty: true          # Equivalent to -t in docker run

networks:
  static-network:
    ipam:
      config:
        - subnet: 192.168.10.0/24
